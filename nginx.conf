#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# worker进程的最大打开文件数限制，默认值为操作系统的限制（ulimit -n）
worker_rlimit_nofile    100000;         


events {
    worker_connections  2048;           # 每个工作进程允许最大的同时连接数 
    multi_accept        on;             # nginx 获得新连接的通知之后接受尽可能多的连接
    #use                 epoll;         # Linux 2.6+ 使用，设置客户端连接时线程轮询方法
}


http {
    include             mime.types;
    default_type        application/octet-stream;
    charset             utf-8;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush      on;                 # nginx在一个数据包里发送所有头文件，而不一个接一个的发送
    tcp_nodelay     on;


    keepalive_timeout           20;
    client_header_timeout       20;
    client_body_timeout         20;
    # nginx 关闭不响应的客户端连接时释放所占有的内存空间
    reset_timedout_connection   on;
    send_timeout                20;


    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
 
    open_file_cache max=100000 inactive=20s; 
    open_file_cache_valid 30s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    client_max_body_size        15m;
    client_body_buffer_size     128K;
    client_header_buffer_size   2k;

    #414 Request-URI Too Large
    large_client_header_buffers 4 32k;

    server {
        listen 80;
        server_name erlple;

        keepalive_timeout 65;
        gzip off;

        if ( $server_port = 8888 ) {
            rewrite ^ http://erlple:80/ permanent;
            break;
        }


        location ~ ^/html/ {
            root    /Users/dengjoe/erlang/erlple/;
            index   index.html index.htm;
            expires off;
        }

        location / {
            proxy_pass http://127.0.0.1:8888/;
            proxy_redirect off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

            client_max_body_size       50m;
            client_body_buffer_size    128k;

            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;

            proxy_buffer_size          4k;
            proxy_buffers              4 32k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;
        }

        location /close-connection {
            keepalive_timeout 0;
            empty_gif;
        }

        access_log off;

    }

   
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root    /Users/dengjoe/mnmp/html;

        location / {
            index   index.html index.htm index.php;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_intercept_errors on;
            fastcgi_pass    127.0.0.1:9000;
            fastcgi_index   index.php;
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include         /usr/local/etc/nginx/fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # HTTP Proxy
    server {
        listen 8036;
        resolver 8.8.8.8;
        location /{
            proxy_pass http://$http_host$request_uri;
            #allow 127.0.0.1;
            #deny all;
        }
    }
	
    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    include vhost/*.conf;

}
